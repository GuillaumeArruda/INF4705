#############################################################################
# Makefile for building: TP3
# Generated by qmake (3.0) (Qt 5.4.2)
# Project:  ../TP3/TP3.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -spec linux-g++-64 -o Makefile ../TP3/TP3.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -m64 -pipe -O2 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -fopenmp -O2 -std=c++1y -Wall -W -fPIC $(DEFINES)
INCPATH       = -I../TP3 -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++-64
QMAKE         = /usr/lib/x86_64-linux-gnu/qt5/bin/qmake
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = TP31.0.0
DISTDIR = /home/guarr/Development/inf4705/TP3/.tmp/TP31.0.0
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS) -fopenmp 
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../TP3/algorithm.cpp \
		../TP3/main.cpp \
		../TP3/problem.cpp \
		../TP3/solution.cpp \
		../TP3/voraceAlgorithm.cpp 
OBJECTS       = algorithm.o \
		main.o \
		problem.o \
		solution.o \
		voraceAlgorithm.o
QMAKE_TARGET  = TP3
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = rang


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

all: Makefile $(TARGET)

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`/$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: FORCE
	@test -d $(DISTDIR) || mkdir -p $(DISTDIR)
	$(COPY_FILE) --parents $(DIST) $(DISTDIR)/


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


####### Sub-libraries

check: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

algorithm.o: ../TP3/algorithm.cpp ../TP3/algorithm.h \
		../TP3/solution.h \
		../TP3/student.h \
		../TP3/problem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o algorithm.o ../TP3/algorithm.cpp

main.o: ../TP3/main.cpp ../TP3/algorithm.h \
		../TP3/solution.h \
		../TP3/student.h \
		../TP3/problem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../TP3/main.cpp

problem.o: ../TP3/problem.cpp ../TP3/problem.h \
		../TP3/student.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o problem.o ../TP3/problem.cpp

solution.o: ../TP3/solution.cpp ../TP3/solution.h \
		../TP3/student.h \
		../TP3/problem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o solution.o ../TP3/solution.cpp

voraceAlgorithm.o: ../TP3/voraceAlgorithm.cpp ../TP3/voraceAlgorithm.h \
		../TP3/algorithm.h \
		../TP3/solution.h \
		../TP3/student.h \
		../TP3/problem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o voraceAlgorithm.o ../TP3/voraceAlgorithm.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

